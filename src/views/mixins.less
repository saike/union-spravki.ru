.gradient (@startColor: #eee, @endColor: white) {
  background-color: @startColor;
  background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
  background: -webkit-linear-gradient(top, @startColor, @endColor);
  background: -moz-linear-gradient(top, @startColor, @endColor);
  background: -ms-linear-gradient(top, @startColor, @endColor);
  background: -o-linear-gradient(top, @startColor, @endColor);
}

.linear-gradient( @var){
  background: -webkit-linear-gradient(@var);
  background: -moz-linear-gradient(@var);
  background: -ms-linear-gradient(@var);
  background: -o-linear-gradient(@var);
}

.rounded-corners (@radius: 5px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  -ms-border-radius: @radius;
  -o-border-radius: @radius;
  border-radius: @radius;
}

.rounded-corners-top (@radius: 5px) {
  border-radius: @radius @radius 0px 0px;
  -moz-border-radius: @radius @radius 0px 0px;
  -webkit-border-radius: @radius @radius 0px 0px;
  border: 0px solid #000000;
}

.rounded-corners-bottom (@radius: 5px) {
  border-radius: 0px 0px @radius @radius;
  -moz-border-radius: 0px 0px @radius @radius;
  -webkit-border-radius: 0px 0px @radius @radius;
  border: 0px solid #000000;
}

.box-shadow (@string) {
  -webkit-box-shadow: @string;
  -moz-box-shadow:    @string;
  box-shadow:         @string;
}

.box-sizing(...){
  -webkit-box-sizing: @arguments;
  -moz-box-sizing: @arguments;
  box-sizing: @arguments;
}

.transition(...){
  -webkit-transition: @arguments;
  -moz-transition: @arguments;
  -o-transition: @arguments;
  transition: @arguments;
}

.transform(...) {
  -webkit-transform: @arguments;
  -moz-transform: @arguments;
  -ms-transform: @arguments;
  -o-transform: @arguments;
  transform: @arguments;
}

.clearfix() {
  display: block;
  zoom: 1;

  &:after {
    content: " ";
    display: block;
    font-size: 0;
    height: 0;
    clear: both;
    visibility: hidden;
  }
}

.t-ellps() {
  white-space: nowrap;
  overflow: hidden;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
}

.transform-origin(...) {
  -webkit-transform-origin: @arguments;
  -moz-transform-origin: @arguments;
  -ms-transform-origin: @arguments;;
  -o-transform-origin: @arguments;;
  transform-origin: @arguments;;
}

.triangle(@width, @height, @color, @direction) {
  display: inline-block;
  width: 0;
  height: 0;
  & when (@direction = 'up') {
    border-top: none;
    border-left: @width/2 solid transparent !important;
    border-right: @width/2 solid transparent !important;
    border-bottom: @height solid @color;
  }
  & when (@direction = 'down') {
    border-bottom: none;
    border-left: @width/2 solid transparent !important;
    border-right: @width/2 solid transparent !important;
    border-top: @height solid @color;
  }
  & when (@direction = 'left') {
    border-top: @height/2 solid transparent !important;
    border-left: none;
    border-right: @width solid @color;
    border-bottom: @height/2 solid transparent !important;
  }
  & when (@direction = 'right') {
    border-top: @height/2 solid transparent !important;
    border-right: none;
    border-left: @width solid @color;
    border-bottom: @height/2 solid transparent !important;
  }
}

.placeholder(@color:#aaa, @element: 08121991) {
  @{element}::-webkit-input-placeholder {
    color: @color;
  }
  @{element}:-moz-placeholder {
    color: @color;
  }
  @{element}::-moz-placeholder {
    color: @color;
  }
  @{element}:-ms-input-placeholder {
    color: @color;
  }
}

.link_simple(){
  .transition(all .2s ease);
  opacity: .8;

  &:hover{
    opacity: 1;
  }
}

.for(@list, @code) {
  & {
    .loop(@i:1) when (@i =< length(@list)) {
      @value: extract(@list, @i);

      @code();

      .loop(@i + 1);
    }

    .loop();
  }
}